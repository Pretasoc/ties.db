#!/bin/sh
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# OPTIONS:
#   -f: start in foreground
#   -e: start with elasticsearch enabled
#   -p <filename>: log the pid to a file (useful to kill it later)
#   -v: print version string and exit

# CONTROLLING STARTUP:
#
# This script relies on few environment variables to determine startup
# behavior, those variables are:
#
#   CLASSPATH -- A Java classpath containing everything necessary to run.
#   JVM_OPTS -- Additional arguments to the JVM for heap size, etc
#   COORDINATOR_CONF -- Directory containing CoordinatOR configuration files.
#   COORDINATOR_LOGDIR -- Directory containing coordinator logs, override default location
#   COORDINATOR_DAEMON -- the coordinator entry point class:
#        "org.apache.coordinator.service.ElassandraDaemon" to enable elasticsearch
#
# As a convenience, a fragment of shell is sourced in order to set one or
# more of these variables. This so-called `include' can be placed in a
# number of locations and will be searched for in order. The lowest
# priority search path is the same directory as the startup script, and
# since this is the location of the sample in the project tree, it should
# almost work Out Of The Box.
#
# Any serious use-case though will likely require customization of the
# include. For production installations, it is recommended that you copy
# the sample to one of /usr/share/coordinator/coordinator.in.sh,
# /usr/local/share/coordinator/coordinator.in.sh, or
# /opt/coordinator/coordinator.in.sh and make your modifications there.
#
# Another option is to specify the full path to the include file in the
# environment. For example:
#
#   $ COORDINATOR_INCLUDE=/path/to/in.sh coordinator -p /var/run/cass.pid
#
# Note: This is particularly handy for running multiple instances on a
# single installation, or for quick tests.
#
# Finally, developers and enthusiasts who frequently run from an SVN
# checkout, and do not want to locally modify bin/coordinator.in.sh, can put
# a customized include file at ~/.coordinator.in.sh.
#
# If you would rather configure startup entirely from the environment, you
# can disable the include by exporting an empty COORDINATOR_INCLUDE, or by
# ensuring that no include files exist in the aforementioned search list.
# Be aware that you will be entirely responsible for populating the needed
# environment variables.

# NB: Developers should be aware that this script should remain compatible with
# POSIX sh and Solaris sh. This means, in particular, no $(( )) and no $( ).

# If an include wasn't specified in the environment, then search for one...
if [ "x$COORDINATOR_INCLUDE" = "x" ]; then
    # Locations (in order) to use when searching for an include file.
    for include in "`dirname "$0"`/coordinator.in.sh" \
                   "$HOME/.coordinator.in.sh" \
                   /usr/share/coordinator/coordinator.in.sh \
                   /usr/local/share/coordinator/coordinator.in.sh \
                   /opt/coordinator/coordinator.in.sh; do
        if [ -r "$include" ]; then
            . "$include"
            break
        fi
    done
# ...otherwise, source the specified include.
elif [ -r "$COORDINATOR_INCLUDE" ]; then
    . "$COORDINATOR_INCLUDE"
fi

# Use JAVA_HOME if set, otherwise look for java in PATH
if [ -n "$JAVA_HOME" ]; then
    # Why we can't have nice things: Solaris combines x86 and x86_64
    # installations in the same tree, using an unconventional path for the
    # 64bit JVM.  Since we prefer 64bit, search the alternate path first,
    # (see https://issues.apache.org/jira/browse/COORDINATOR-4638).
    for java in "$JAVA_HOME"/bin/amd64/java "$JAVA_HOME"/bin/java; do
        if [ -x "$java" ]; then
            JAVA="$java"
            break
        fi
    done
else
    JAVA=java
fi

if [ -z $JAVA ] ; then
    echo Unable to find java executable. Check JAVA_HOME and PATH environment variables. > /dev/stderr
    exit 1;
fi

# If numactl is available, use it. For CoordinatOR, the priority is to
# avoid disk I/O. Even for the purpose of CPU efficiency, we don't
# really have CPU<->data affinity anyway. Also, empirically test that numactl
# works before trying to use it (COORDINATOR-3245).
NUMACTL_ARGS="--interleave=all"
if which numactl >/dev/null 2>/dev/null && numactl $NUMACTL_ARGS ls / >/dev/null 2>/dev/null
then
    NUMACTL="numactl $NUMACTL_ARGS"
else
    NUMACTL=""
fi

if [ -z "$COORDINATOR_CONF" -o -z "$CLASSPATH" ]; then
    echo "You must set the COORDINATOR_CONF and CLASSPATH vars" >&2
    exit 1
fi

if [ -f "$COORDINATOR_CONF/coordinator-env.sh" ]; then
    . "$COORDINATOR_CONF/coordinator-env.sh"
fi

# Special-case path variables.
case "`uname`" in
    CYGWIN*)
        CLASSPATH=`cygpath -p -w "$CLASSPATH"`
        COORDINATOR_CONF=`cygpath -p -w "$COORDINATOR_CONF"`
    ;;
esac

# Set default log dir if not set
if [ -z "$COORDINATOR_LOGDIR" ]; then
  for logdir in "/var/log/coordinator" "$COORDINATOR_HOME/logs"; do
    if [ -d "$logdir" ]; then
      COORDINATOR_LOGDIR="$logdir"
      break
    fi
  done
fi

# CoordinatOR uses an installed jemalloc via LD_PRELOAD / DYLD_INSERT_LIBRARIES by default to improve off-heap
# memory allocation performance. The following code searches for an installed libjemalloc.dylib/.so/.1.so using
# Linux and OS-X specific approaches.
# To specify your own libjemalloc in a different path, configure the fully qualified path in COORDINATOR_LIBJEMALLOC.
# To disable jemalloc preload at all, set COORDINATOR_LIBJEMALLOC=-
#
#COORDINATOR_LIBJEMALLOC=
#
find_library()
{
    pattern=$1
    path=$(echo ${2} | tr ":" " ")

    find $path -regex "$pattern" -print 2>/dev/null | head -n 1
}
case "`uname -s`" in
    Linux)
        if [ -z $COORDINATOR_LIBJEMALLOC ] ; then
            which ldconfig > /dev/null 2>&1
            if [ $? = 0 ] ; then
                # e.g. for CentOS
                dirs="/lib64 /lib /usr/lib64 /usr/lib `ldconfig -v 2>/dev/null | grep -v '^\s' | sed 's/^\([^:]*\):.*$/\1/'`"
            else
                # e.g. for Debian, OpenSUSE
                dirs="/lib64 /lib /usr/lib64 /usr/lib `cat /etc/ld.so.conf /etc/ld.so.conf.d/*.conf | grep '^/'`"
            fi
            dirs=`echo $dirs | tr " " ":"`
            COORDINATOR_LIBJEMALLOC=$(find_library '.*/libjemalloc\.so\(\.1\)*' $dirs)
        fi
        if [ ! -z $COORDINATOR_LIBJEMALLOC ] ; then
            export JVM_OPTS="$JVM_OPTS -Dcoordinator.libjemalloc=$COORDINATOR_LIBJEMALLOC"
            if [ "-" != "$COORDINATOR_LIBJEMALLOC" ] ; then
                export LD_PRELOAD=$COORDINATOR_LIBJEMALLOC
            fi
        fi
    ;;
    Darwin)
        if [ -z $COORDINATOR_LIBJEMALLOC ] ; then
            COORDINATOR_LIBJEMALLOC=$(find_library '.*/libjemalloc\.dylib' $DYLD_LIBRARY_PATH:${DYLD_FALLBACK_LIBRARY_PATH-$HOME/lib:/usr/local/lib:/lib:/usr/lib})
        fi
        if [ ! -z $COORDINATOR_LIBJEMALLOC ] ; then
            export JVM_OPTS="$JVM_OPTS -Dcoordinator.libjemalloc=$COORDINATOR_LIBJEMALLOC"
            if [ "-" != "$COORDINATOR_LIBJEMALLOC" ] ; then
                export DYLD_INSERT_LIBRARIES=$COORDINATOR_LIBJEMALLOC
            fi
        fi
    ;;
esac

launch_service()
{
    pidpath="$1"
    foreground="$2"
    props="$3"
    class="$4"
    coordinator_parms="-Dlogback.configurationFile=$COORDINATOR_CONF/logback.xml"
    coordinator_parms="$coordinator_parms -Dcoordinator.logdir=$COORDINATOR_LOGDIR"
    coordinator_parms="$coordinator_parms -Dcoordinator.storagedir=$coordinator_storagedir"

    # needed by elaticsearch for graphic computations
    JVM_OPTS="$JVM_OPTS -Djava.awt.headless=true"

    if [ "x$pidpath" != "x" ]; then
        coordinator_parms="$coordinator_parms -Dcoordinator-pidfile=$pidpath"
    fi

    echo "Starting coordinator with $class"

    # Problem with ElassandraDaemon if COORDINATOR_HOME is not in environment
    # We have to export explicitly COORDINATOR_HOME
    [ -n "$COORDINATOR_HOME" ] && export COORDINATOR_HOME

    # The coordinator-foreground option will tell CoordinatORDaemon not
    # to close stdout/stderr, but it's up to us not to background.
    if [ "x$foreground" != "x" ]; then
        coordinator_parms="$coordinator_parms -Dcoordinator-foreground=yes"
        exec $NUMACTL "$JAVA" $JVM_OPTS $coordinator_parms -cp "$CLASSPATH" $props "$class"
    # Startup CoordinatORDaemon, background it, and write the pid.
    else
        exec $NUMACTL "$JAVA" $JVM_OPTS $coordinator_parms -cp "$CLASSPATH" $props "$class" <&- &
        [ ! -z "$pidpath" ] && printf "%d" $! > "$pidpath"
        true
    fi

    return $?
}

# Parse any command line options.
args=`getopt vefdhp:bD:H:E: "$@"`
eval set -- "$args"

while true; do
    case "$1" in
        -p)
            pidfile="$2"
            shift 2
        ;;
        -f)
            foreground="yes"
            shift
        ;;
        -h)
            echo "Usage: $0 [-f] [-h][-e] [-p pidfile] [-H dumpfile] [-E errorfile]"
            exit 0
        ;;
        -v)
            "$JAVA" -cp "$CLASSPATH" "-Dlogback.configurationFile=logback-tools.xml" org.apache.coordinator.tools.GetVersion
            exit 0
        ;;
        -D)
            properties="$properties -D$2"
            shift 2
        ;;
        -e)
            elastic="yes"
            shift 1
        ;;
        -d) # start in debug mode
            echo "Starting with JVM debug address=${JVM_DEBUG_PORT:-4242} suspend=${JVM_DEBUG_WAIT:-n}"
            JVM_OPTS="$JVM_OPTS -ea -Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,server=y,suspend=${JVM_DEBUG_WAIT:-n},address=${JVM_DEBUG_PORT:-4242}"
            shift 1
        ;;
        -H)
            properties="$properties -XX:HeapDumpPath=$2"
            shift 2
        ;;
        -E)
            properties="$properties -XX:ErrorFile=$2"
            shift 2
        ;;
        --)
            shift
            break
        ;;
        *)
            echo "Error parsing arguments!" >&2
            exit 1
        ;;
    esac
done

classname="com.tiesdb.TiesDB"

# see COORDINATOR-7254
"$JAVA" -cp "$CLASSPATH" $JVM_OPTS 2>&1 | grep -q 'Error: Exception thrown by the agent : java.lang.NullPointerException'
if [ $? -ne "1" ]; then
    echo Unable to bind JMX, is CoordinatOR already running?
    exit 1;
fi

# Start up the service
launch_service "$pidfile" "$foreground" "$properties" "$classname"
exit $?

# vi:ai sw=4 ts=4 tw=0 et
